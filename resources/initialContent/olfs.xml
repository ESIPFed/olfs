<?xml version="1.0" encoding="UTF-8"?>
<OLFSConfig>

    <DispatchHandlers>

        <HttpGetHandlers>
            
            <Handler className="opendap.bes.BESManager">
                <BES>
                    <!-- The prefix is a URL token between server address/port
                    and catalog root used to designate a particular BES instance
                    in the case that multiple Back-End-Servers are available to
                    a single OLFS.  The default is no additional tag,
                    designated by "/". So, for a single BES the prefix MUST be
                    set to "/".  -->
                    <prefix>/</prefix>

                    <!-- The hostname (or IP address) for this BES -->
                    <host>localhost</host>

                    <!-- The port number for this BES -->
                    <port>10022</port>

                    <!-- The Administration port number for this BES -->
                    <!-- <adminPort>11002</adminPort> -->

                    <!--
                        The maximum response size, in kilobytes, for non authenticated users
                        A value of zero means there is no limit.
                    -->
                    <maxResponseSize>0</maxResponseSize>


                    <!-- The ClientPool maximum number of concurrent
                      -  BES client connections allowed.
                      -->
                    <ClientPool maximum="10" maxCmds="2000" />

                </BES>

            </Handler>


            <!-- Bot Blocker
               -
               - This handler can beused to block access from specific IP addresses
               - and by a range of IP addresses using a regular expression.
               -
              -->
            <!-- <Handler className="opendap.coreServlet.BotBlocker"> -->

                <!-- <IpAddress>127.0.0.1</IpAddress> -->

                <!-- This matches all IPv4 addresses, work yours out from here.... -->
                <!-- <IpMatch>[012]?\d?\d\.[012]?\d?\d\.[012]?\d?\d\.[012]?\d?\d</IpMatch> -->

                <!-- Any IP starting with 65.55 (MSN bots the don't respect robots.txt  -->
                <!-- <IpMatch>65\.55\.[012]?\d?\d\.[012]?\d?\d</IpMatch>   -->

            <!-- </Handler>  -->
                     
                     
            <Handler className="opendap.ncml.NcmlDatasetDispatcher" />            
   
            <Handler className="opendap.threddsHandler.StaticCatalogDispatch">
                <prefix>thredds</prefix>
                <useMemoryCache>true</useMemoryCache>
            </Handler>

            <Handler className="opendap.gateway.DispatchHandler">
                <prefix>gateway</prefix>
            </Handler>


            <!--  opendap.bes.dapResponders.DapDispatcher


            Provides all DAP responses.

            This includes a DatasetServices response that is returned for every data resource URL. The
            DatasetServices response is an XML document with a

            * A root level DatasetServices element which has:
                * A required xml:base attribute the holds as it's value the URL de-referenced to generate the
                  document. This would be the data resource URL.

                * One or more Service elements each of which has
                    * A name attribute that has as its value the name of the service.
                    * A required xlink:href attribute that has as its value the service URL.
                    * An optional child element Description that contains
                        * An optional xlink:href attribute that points to a human/browser readable description of the service.
                        * And the required content of a brief description of the service.

                * An optional ServerSideFunction element that holds
                 * One or more Function elements each of which has
                     * A name attribute that has as its value the name of the function.
                     * An optional xlink:href attribute that has as its value a URL that points to a
                       human readable description of the function.
                     * An optional child element Description that contains
                         * And the required content of a brief description of the service.


            Example:

            <DatasetServices xml:base="http://test.opendap.org:8090/opendap/hyrax/ECMWF_ERA-40_subset.ncml">

                <Service name="FileAccess" xlink:href="http://test.opendap.org:8090/opendap/hyrax/ECMWF_ERA-40_subset.ncml.file">
                    <Description xlink:href="http://services.opendap.org/dataset_file_access.html">Access to dataset file.</Description>
                </Service>
                <ServerSideFunctions>
                    <Function name="geogrid"
                              xlink:href="http://docs.opendap.org/index.php/Server_Side_Processing_Functions#geogrid">
                        <Description>Allows a DAP Grid variable to be sub-sampled using georeferenced values.</Description>
                    </Function>
                </ServerSideFunctions>
            </DatasetServices>


            The DatasetServices response is obtained by de-referencing the data resource URL (aka the
            dataset URL, aka the file URL).


            Returning the Service Description in response to requests for the dataset URL eliminates a long
            standing ambiguity and lack of REST(ful) behavior in the Hyrax DAP servers.


            -->
            <Handler className="opendap.bes.dapResponders.DapDispatcher" >

                <!-- AllowDirectDataSourceAccess
                  - If this element is present then the server will allow users to request
                  - the data source (file) directly. For example a user could just get the
                  - underlying NetCDF files located on the server without using the OPeNDAP
                  - request interface.
                  -
                  - THINK TWICE before allowing this, as data sources can be quite large
                  - and allowing their transmission with out subsetting can put heavy loads
                  - on the network and the server.
                  -->
                  <!-- AllowDirectDataSourceAccess / -->

                  <!-- UseDAP2ResourceUrlResponse / -->

            </Handler>

            <Handler className="opendap.bes.DirectoryDispatchHandler" />

            <Handler className="opendap.bes.FileDispatchHandler" />

            <Handler className="opendap.bes.BESThreddsDispatchHandler" />


        </HttpGetHandlers>


        <HttpPostHandlers>
            <Handler className="opendap.coreServlet.SOAPRequestDispatcher" >
                <OpendapSoapDispatchHandler>opendap.bes.SoapDispatchHandler</OpendapSoapDispatchHandler>
            </Handler>
        </HttpPostHandlers>


    </DispatchHandlers>


</OLFSConfig>

