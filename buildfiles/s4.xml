<?xml version="1.0"?>

<!--
/////////////////////////////////////////////////////////////////////////////
// This file is part of the "Java-OPeNDAP" project, a Java implementation
// of the OPeNDAP Data Access Protocol.
//
// Copyright (c) 2006 OPeNDAP, Inc.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// You can contact OPeNDAP, Inc. at PO Box 112, Saunderstown, RI. 02874-0112.
/////////////////////////////////////////////////////////////////////////////
-->


<!DOCTYPE project [
    <!ENTITY globalprops      SYSTEM "file:./globalprops.xml">
    <!ENTITY globaltargets    SYSTEM "file:./globaltargets.xml">
]>

<!-- Build file for OPeNDAP core software -->


<project name="Server4 OPeNDAP Server Prototype" default="all" basedir="..">

    <!-- Global Properties -->
    &globalprops;

    <!-- Global Targets -->
    &globaltargets;

    <!-- Library (class)paths -->
    <path id="s4.compile.classpath">
        <pathelement path="${build.classes}" />
        <fileset dir="${lib.dir}">
            <include name="${servlet.lib}" />
            <include name="${jdom.lib}" />
            <include name="${cli.lib}" />
            <include name="${thredds.lib}" />
            <include name="${netcdf.lib}" />
            <include name="${nlog4j.lib}" />
        </fileset>
    </path>



    <target name="all" depends="clean,clients,server,soap-lib" description="Builds lots of stuff."/>
    <target name="compile" depends="s4" description="Compiles the Server4 software."/>


    <target name="clients" depends="BESclient" description="Compiles the clients."/>


    <target
        name="s4"
        depends="init"
        description="Compiles Server 4."
        >
        <echo level="info" message="AntFile: ${ant.file} Compiling Server4"/>
        <echo level="info" message="Using the ${build.compiler} javac compiler"/>
        <echo level="info" message=""/>
        <javac compiler="${build.compiler}"
            destdir="${build.classes}"
            debug="${compile.debug}"
            debuglevel="${compile.debuglevel}"
            deprecation="${compile.deprecation}">

            <classpath refid="s4.compile.classpath"/>

            <src path="${src.dir}"/>
            <exclude name="opendap/soap/TestClient.java"/>
            <exclude name="opendap/soap/SoapUtils.java"/>
            <include name="opendap/**/*.java"/>
            <include name="hao/**/*.java"/>
        </javac>

    </target>


    <target name="s4-lib" depends="clean,compile">
        <jar destfile="${build.lib}/s4-${VERSION}.jar">
            <fileset dir="${build.classes}">
                <exclude name="hao/**/*.class"/>
            </fileset>
        </jar>

    </target>


    <target name="soap-lib" depends="clean,compile">
        <jar destfile="${build.lib}/opendap-soap-${VERSION}.jar">
            <fileset dir="${build.classes}">
                <include name="opendap/soap/**/*.class"/>
            </fileset>
        </jar>

    </target>


    <target
        name="doc"
        depends="init,IsJavaDocUpToDate"
        description="Builds JavaDoc for the Serve4 software packages, if missing or out of date."
        unless="JavaDocIsUpToDate"
        >

        <javadoc destdir="${build.doc}/javadoc"
            author="true"
            version="true"
            use="true"
            Verbose="true"
            failonerror="true"
            >

            <classpath refid="s4.compile.classpath"/>

            <fileset dir="${src.dir}/opendap/" >

            </fileset>

        </javadoc>

        <copy todir="${build.doc}" >
            <fileset dir="${doc.dir}">
                <exclude name="javadoc/**"/> <!-- Exclude the javadoc directory in the ${doc.dir} dir -->
                <exclude name="_notes/**"/> <!-- Exclude the _notes directory in the ${doc.dir} dir -->
            </fileset>
        </copy>
    </target>



    <target
        name="doc-dist"
        depends="clean,doc"
        description="Builds documentation distribution"
        >

        <jar destfile="${build.dist}/Server4-${VERSION}-doc.jar">
            <zipfileset dir="${build.doc}" prefix="Server4-${VERSION}-doc"/>
        </jar>

    </target>


    <target
        name="src-dist"
        depends="clean,init"
        description="Builds source distribution"
        >

        <jar destfile="${build.dist}/Server4-${VERSION}-src.jar"
                >

            <zipfileset dir="." prefix="Server4-${VERSION}-src">
                <exclude name="build/**"/>
                <exclude name="doc/javadoc/**"/> <!-- Exclude the javadoc directory in the ${doc.dir} dir -->
                <exclude name="doc/_notes/**"/> <!-- Exclude the _notes directory in the ${doc.dir} dir -->
                <exclude name="**/*.iml"/>
                <exclude name="**/*.ipr"/>
                <exclude name="**/*.iws"/>
            </zipfileset>

        </jar>

    </target>

    <target
        name="server-dist"
        depends="server"
        description="Packages the war file into tar file with a release related name.">

        <copy file="${distributionResources.dir}/WarFileReadme" tofile="${build.dist}/README" />

        <jar destfile="${build.dist}/Server4-${VERSION}-olfs.jar" >
            <zipfileset dir="${build.dist}" prefix="Server4-${VERSION}-olfs">
                <include name="opendap.war" />
                <include name="README" />
            </zipfileset>

        </jar>

        <delete file="${build.dist}/README" />
        <delete file="${build.dist}/opendap.war" />

    </target>



    <target
        name="DISTRO"
        depends="clean,src-dist,doc-dist,server-dist"
        description="Builds complete distribution"
        >

    </target>



    <target
        name="IsJavaDocUpToDate"
        description="Checks to see if the JavaDoc is out of date."
        >
        <uptodate property="JavaDocIsUpToDate" targetfile="${build.doc}/opendap/index.html">
            <srcfiles dir="${src.dir}">
                <include name="opendap/**/*.java"/>
            </srcfiles>
        </uptodate>

    </target>


    <target
        name="BESclient"
        depends="s4-lib"
        description="Build and package the back end client."
        >

        <copy file="${lib.dir}/${cli.lib}" tofile="${build.dist}/${cli.lib}"/>

        <jar destfile="${build.dist}/beclient.jar"
            manifest="jar/BESclient.MANIFEST.MF">
            <fileset dir="${build.classes}">
                <include name="opendap/ppt/**/*.class"/>
                <include name="hao/**/*.class"/>
            </fileset>
        </jar>


    </target>


    <target
        name="server"
        depends="s4-lib,doc"
        description="Performs a clean build of the core software and assembles the WAR file."
        >



        <war destfile="${build.dist}/opendap.war"
            webxml="${WebInfResources.dir}/s4web.xml"
            >

            <lib dir="${lib.dir}">
                <include name="${jdom.lib}"/>
                <include name="${thredds.lib}"/>
                <include name="${netcdf.lib}"/>
                <include name="${nlog4j.lib}"/>
                <include name="${xercesImpl.lib}"/>
                <include name="${xercesXmlApis.lib}"/>
            </lib>
            <classes dir="${build.classes}"/>


            <zipfileset dir="${build.doc}" prefix="docs">
                <exclude name="src.distribution.readme"/>
                <exclude name="_notes"/>
            </zipfileset>


            <zipfileset dir="${schema.dir}" prefix="schema" />

            <zipfileset dir="${build.doc}/javadoc" prefix="javadocs/server4"/>

            <!-- zipfileset dir="${build.lib}" prefix="s4-libraries"/ -->

            <zipfileset dir="${lib.dir}" prefix="s4-libraries">
                <include name="${jdom.lib}"/>
                <include name="${thredds.lib}"/>
                <include name="${netcdf.lib}"/>
                <include name="${nlog4j.lib}"/>
                <include name="${xercesImpl.lib}"/>
                <include name="${xercesXmlApis.lib}"/>
           </zipfileset>

            <zipfileset dir="${initialContent.dir}" prefix="initialContent">
                <include name="**/*"/>
           </zipfileset>

            <webinf dir="${WebInfResources.dir}">
                <include name="log4j.xml"/>
            </webinf>


        </war>

        <delete file="${build.dist}/index.html"/>

    </target>


</project>










