<?xml version="1.0"?>

<!DOCTYPE project [
    <!ENTITY globalprops      SYSTEM "file:./globalprops.xml">
    <!ENTITY globaltargets    SYSTEM "file:./globaltargets.xml">
]>

<!-- Build file for OPeNDAP core software -->


<project name="Server4 OPeNDAP Server Prototype" default="all" basedir="..">

    <!-- Global Properties -->
    &globalprops;

    <!-- Global Targets -->
    &globaltargets;

    <!-- Library (class)paths -->
    <path id="compile.classpath">
        <pathelement path="${build.classes}"/>
        <fileset dir="${lib.dir}">
            <include name="${servlet.lib}"/>
            <include name="${opendap.lib}"/>
            <include name="${jdom.lib}"/>
            <include name="${cli.lib}"/>
        </fileset>
    </path>


    <target name="all" depends="clean,client,server" description="Compiles the DRDS software."/>
    <target name="compile" depends="s4" description="Compiles the DRDS software."/>




    <target
        name="s4"
        depends="init"
        description="Compiles Server 4."
        >
        <echo level="info" message="AntFile: ${ant.file} Compiling DRDS"/>
        <echo level="info" message="Using the ${build.compiler} javac compiler"/>
        <echo level="info" message=""/>
        <javac compiler="${build.compiler}"
            destdir="${build.classes}"
            debug="${compile.debug}"
            debuglevel="${compile.debuglevel}"
            deprecation="${compile.deprecation}">

            <classpath refid="compile.classpath"/>

            <src path="${src.dir}"/>
            <include name="opendap/**/*.java"/>
            <include name="hao/**/*.java"/>
        </javac>

    </target>


    <target name="s4-lib" depends="clean,compile">
        <jar destfile="${build.lib}/s4-${VERSION}.jar">
            <fileset dir="${build.classes}">
                <exclude name="hao/**/*.class"/>
            </fileset>
        </jar>

    </target>


    <target
        name="doc"
        depends="init,IsJavaDocUpToDate"
        description="Builds JavaDoc for the core OPeNDAP software packages, if missing or out of date."
        unless="JavaDocIsUpToDate"
        >

        <javadoc destdir="${build.doc}/server4"
            author="true"
            version="true"
            use="true"
            Verbose="false">

            <classpath refid="compile.classpath"/>

            <fileset dir="${src.dir}/opendap/"/>
        </javadoc>

        <copy todir="${build.doc}">
            <fileset dir="${doc.dir}">
                <exclude name="src.distribution.readme"/>
                <exclude name="servlet-index.html"/>
            </fileset>
        </copy>


    </target>

    <target
        name="doc-dist"
        depends="doc"
        description="Builds documentation distribution"
        >

        <jar destfile="${build.dist}/drds-${VERSION}-doc.jar">
            <zipfileset dir="${build.doc}" prefix="drds-${VERSION}-doc"/>
        </jar>

    </target>



    <target
        name="IsJavaDocUpToDate"
        description="Checks to see if the JavaDoc is out of date."
        >
        <uptodate property="JavaDocIsUpToDate" targetfile="${build.doc}/opendap/index.html">
            <srcfiles dir="${src.dir}">
                <include name="opendap/servers/sql/**/*.java"/>
            </srcfiles>
        </uptodate>

    </target>


    <target
        name="client"
        depends="s4-lib"
        description="Build and package the back end client."
        >

        <copy file="${lib.dir}/${cli.lib}" tofile="${build.dist}/${cli.lib}"/>

        <jar destfile="${build.dist}/beclient.jar"
            manifest="jar/MANIFEST.MF">
            <fileset dir="${build.classes}">
                <include name="opendap/ppt/**/*.class"/>
                <include name="hao/**/*.class"/>
            </fileset>
        </jar>


    </target>


    <target
        name="server"
        depends="s4-lib,doc"
        description="Performs a clean build of the core software and assembles the WAR file."
        >
        <copy file="${doc.dir}/servlet-index.html" tofile="${build.dist}/index.html"/>
        <war destfile="${build.dist}/s4.war"
            webxml="${src.dir}/WEB-INF/s4web.xml"
            >

            <lib dir="${lib.dir}">
                <include name="${regexp.lib}"/>
                <include name="${getopt.lib}"/>
                <include name="${jdom.lib}"/>
                <include name="${opendap.lib}"/>
            </lib>
            <classes dir="${build.classes}"/>


            <fileset dir="${doc.dir}">
                <exclude name="src.distribution.readme"/>
                <exclude name="index.html"/>
            </fileset>

            <fileset file="${build.dist}/index.html"/>

            <zipfileset dir="${schema.dir}" prefix="schema" />

            <zipfileset dir="${build.doc}/server4" prefix="javadocs/server4"/>

            <zipfileset dir="${build.lib}" prefix="s4-libraries"/>

            <zipfileset dir="${lib.dir}" prefix="s4-libraries">
                <include name="${getopt.lib}"/>
                <include name="${regexp.lib}"/>
                <include name="${jdom.lib}"/>
                <include name="${soap.lib}"/>
                <include name="${opendap.lib}"/>
           </zipfileset>


        </war>
        <delete file="${build.dist}/index.html"/>
    </target>



</project>










