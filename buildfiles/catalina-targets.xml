<?xml version="1.0"?>


<!--

In addition to the ability to execute Manager commands via HTTP requests Tomcat 4
includes a convenient set of Task definitions for the Ant (version 1.4 or later)
build tool. In order to use these commands,  you must perform the following setup
operations:

    * Download the binary distribution of Ant from http://jakarta.apache.org/ant.
      You must use version 1.4 or later.

    * Install the Ant distribution in a convenient directory (called ANT_HOME in
      the remainder of these instructions).

    * Copy the file server/lib/catalina-ant.jar from your Tomcat 4 installation
      into Ant's library directory ($ANT_HOME/lib).

    * Add the $ANT_HOME/bin directory to your PATH environment variable.

    * Configure at least one username/password combination in your Tomcat user
      database that includes the manager role.

-->

<!DOCTYPE project [
    <!ENTITY globalprops      SYSTEM "file:./globalprops.xml">
    <!ENTITY globaltargets    SYSTEM "file:./globaltargets.xml">
]>



<project name="Catalina Targets" default="all" basedir="..">


    <!-- Configure the custom Ant tasks for the Manager application -->
    <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
    <taskdef name="install"   classname="org.apache.catalina.ant.InstallTask"/>
    <taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
    <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
    <taskdef name="remove"    classname="org.apache.catalina.ant.RemoveTask"/>
    <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
    <taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
    <taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
    <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
    <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>


    <!-- Global Properties -->
    &globalprops;

    <!-- Global Targets -->
    &globaltargets;

    <target
        name="webapp-redeploy"
        depends="configCatalina,webapp-remove,webapp-deploy"
        description="Re-Deploy the web application: ${webapp.name}"
        if="Catalina.available"
        />

    <target
        name="webapp-deploy"
        depends="configCatalina"
        description="Deploy the web application: ${webapp.name}"
        if="Catalina.available"
        >
        <deploy
            url="${Catalina.url}"
            username="${Catalina.username}"
            password="${Catalina.password}"
            path="${webapp.path}"
            war="${webapp.war.url}"
            />
    </target>


    <target
        name="webapp-remove"
        depends="configCatalina"
        description="Remove the web application: ${webapp.name}"
        if="Catalina.available"
        >
        <remove
            url="${Catalina.url}"
            username="${Catalina.username}"
            password="${Catalina.password}"
            path="${webapp.path}"
            />
    </target>


    <target
        name="web-list"
        depends="configCatalina"
        description="List the web applications on: ${Catalina.url}"
        if="Catalina.available"
        >
        <list
            url="${Catalina.url}"
            username="${Catalina.username}"
            password="${Catalina.password}"
            />
    </target>

    <!-- Catalina.config:

        Jakarta-Tomcat (aka Catalina) properties file. This file must contain
        the three ANT properties used to access Catalina's manager application.
        They are: the URL of the interface, username, and password.
        For example:
        Catalina.url=http://localhost:8080/manager
        Catalina.username=admin
        Catalina.password=somethingsecret

    -->

<!-- This got moved to the globalprops.xml file to allow other buildfiles
    to check for Catalina configuration and return a reasonable failure message
    if configuration is not complete.

    <property name="Catalina.config" location="${buildfiles.dir}/catalina-config"/>
-->



    <!-- Targets to check for and configure Jakarta-Tomcat (aka Catalina) -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    These Targets have been moved to globaltargets.xml to allow other buildfiles
    to check for Catalina configuration and return a reasonable failure message
    if configuration is not complete.

    <target
        name="checkForCatalina"
        description="Check to see if a Jakarta-Tomcat (aka Catalina) configuration is available."
        >
        <available  property="Catalina.available" file="${Catalina.config}"/>
        <echo level="info" message="Catalina.config: ${Catalina.config}"/>
        <echo level="info" message="Catalina.available: ${Catalina.available}"/>

        <fail message="Missing 'catalina-config' file. See 'docs/developerInfo.html' for instructions." unless="Catalina.available"/>
    </target>

    <target
        name="configCatalina"
        description="Load Jakarta-Tomcat (aka Catalina) configuration properties"
        depends="checkForCatalina"
        if="Catalina.available">

        <loadproperties srcFile="${Catalina.config}"/>
        <echo level="info" message="Catalina.url:      ${Catalina.url}"/>
        <echo level="info" message="Catalina.username: ${Catalina.username}"/>
        <echo level="info" message="Catalina.password: ${Catalina.password}"/>

    </target>
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

</project>
